from gedcom.parser import Parser
import streamlit as st
import pickle

from utils import *
import gm_secrets

st.set_page_config(layout="wide")


def check_password():
    """Returns `True` if the user had the correct password."""

    def password_entered():
        """Checks whether a password entered by the user is correct."""
        if st.session_state["password"] == gm_secrets.password:
            st.session_state["password_correct"] = True
            del st.session_state["password"]  # don't store password
        else:
            st.session_state["password_correct"] = False

    if "password_correct" not in st.session_state:
        # First run, show input for password.
        st.text_input(
            "Password", type="password", on_change=password_entered, key="password"
        )
        return False
    elif not st.session_state["password_correct"]:
        # Password not correct, show input + error.
        st.text_input(
            "Password", type="password", on_change=password_entered, key="password"
        )
        st.error("üòï Password incorrect")
        return False
    else:
        # Password correct.
        return True


def main():
    st.title('Legr√∂videbb √∫t k√©t ember k√∂z√∂tt a Hollai/G√∂r√∂g csal√°df√°ban')
    st.write('Add meg a k√©t szem√©ly nev√©t, majd kattints a gombra. N√©v-t√∂red√©k is megadhat√≥, viszont kisbet≈±-nagybet≈± √©rz√©keny. Az √©vsz√°m nem k√∂telez≈ë, de seg√≠thet sz≈±k√≠teni. 1800')

    col1, col2, col3, col4 = st.columns(4)
    p1_1 = col1.text_input('1. szem√©ly vezet√©kn√©v:', value="G√∂r√∂g")
    p1_2 = col2.text_input('1. szem√©ly keresztn√©v:', value="M√°rton Jen≈ë")
    p1_filter_birth = col3.checkbox('Sz≈±r√©s sz√ºlet√©si √©vre', key='p1_filter_birth')
    if p1_filter_birth:
        p1_birth = col4.number_input('1. szem√©ly sz√ºlet√©si √©v:', min_value=1300, max_value=2023, format='%d')
    col1, col2, col3, col4 = st.columns(4)
    p2_1 = col1.text_input('2. szem√©ly vezet√©kn√©v:', value="Andr√°ssy")
    p2_2 = col2.text_input('2. szem√©ly keresztn√©v:', value="Ilona")
    p2_filter_birth = col3.checkbox('Sz≈±r√©s sz√ºlet√©si √©vre', key='p2_filter_birth')
    if p2_filter_birth:
        p2_birth = col4.number_input('2. szem√©ly sz√ºlet√©si √©v:', min_value=1300, max_value=2023, format='%d')

    if st.button('Keress'):
        try:
            gedcom_parser
        except NameError:
            st.write('Csal√°dfa bet√∂lt√©se (~30 m√°sodperc)...')
            with open('gedcom_parser.bin', 'rb') as handle:
                gedcom_parser = pickle.load(handle)

        root_child_elements = gedcom_parser.get_root_child_elements()

        p1 = find(root_child_elements, p1_1, p1_2, p1_birth if p1_filter_birth else None)
        if p1 is None:
            st.error(p1_1 + ' ' + p1_2 + ' nem tal√°lhat√≥')
            return
        p2 = find(root_child_elements, p2_1, p2_2, p2_birth if p2_filter_birth else None)
        if p2 is None:
            st.error(p2_1 + ' ' + p2_2 + ' nem tal√°lhat√≥')
            return

        st.write('Kapcsolat keres√©se...')
        jumps = findConnection(gedcom_parser, p1, p2)

        st.write('Kirajzol√°s...')
        img = drawJumps(gedcom_parser, p2, jumps)

        st.image(img.render())
    

if check_password():
    main()